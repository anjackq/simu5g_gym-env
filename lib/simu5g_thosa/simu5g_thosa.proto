//
// Copyright (C) 2020 Dominik S. Buse, <buse@ccs-labs.org>, Max Schettler <schettler@ccs-labs.org>
//
// Documentation for these modules is at http://veins.car2x.org/
//
// SPDX-License-Identifier: GPL-2.0-or-later
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation; either version 2 of the License, or
// (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
//

syntax = "proto3";

package simu5g_thosa.proto;

import "google/protobuf/timestamp.proto";

message Request {
  uint64 id = 1;
  oneof payload {
    Init init = 2;
    Shutdown shutdown = 3;
    PQos pQos = 4;
  }
}

message Reply {
  uint64 id = 1;
  oneof payload {
    Init init = 2;
    Shutdown shutdown = 3;
    Data data = 4;
  }
}

message Shutdown {
  // can be request or reply
}

message Data {
  TrafficData traffic_data = 1;
  //NetworkData network_data = 2; // To be implemented later
  google.protobuf.Timestamp last_updated = 3;
}

message TrafficData {
  double time_step = 1;
  int32 veh_id = 2;
  double last_pos_x = 3;
  double last_pos_y = 4;
  double last_velocity = 5;
  double last_orientation = 6;
  double distance_to_serving_gnodeb = 7;
}

message Init {
  string action_space_code = 1;
  string observation_space_code = 2;
  string reward_space_code = 3;
}

message PQos {
  message Item {
    double time_step = 1;
    double voip_throughput = 2;
  }

  repeated Item values = 1;
}

//
//message Request {
//  uint64 id = 1;
//  oneof payload {
//    Init init = 2;
//    Shutdown shutdown = 3;
//    Step step = 4;
//  }
//}
//
//message Reply {
//  uint64 id = 1;
//  oneof payload {
//    Init init = 2;
//    Shutdown shutdown = 3;
//    Space action = 4;
//  }
//}
//
//message Init {  // allways a request
//  string action_space_code = 1;
//  string observation_space_code = 2;
//  string reward_space_code = 3;
//}
//
//message Shutdown { // can be request or reply
//}
//
//message Step {
//  Space observation = 1;
//  Space reward = 2;
//}
//
//message Space {
//  oneof value {
//    Box box = 1;
//    Dict dict = 2;
//    Discrete discrete = 3;
//    MultiBinary multi_binary = 4;
//    MultiDiscrete multi_discrete = 5;
//    Tuple tuple = 6;
//  }
//}
//
//message Box {
//  repeated double values = 1;
//}
//
//message Dict {
//  message Item {
//    string key = 1;
//    Space value = 2;
//  }
//
//  repeated Item values = 1;
//}
//
//message Discrete {
//  uint64 value = 1;
//}
//
//message MultiBinary {
//  repeated bool values = 1;
//}
//
//message MultiDiscrete {
//  repeated uint64 values = 1;
//}
//
//message Tuple {
//  repeated Space values = 1;
//}
